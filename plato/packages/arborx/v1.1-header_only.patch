--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,13 +1,18 @@
 cmake_minimum_required(VERSION 3.16)
 project(ArborX CXX)
 
-find_package(Kokkos 3.1 REQUIRED)
-if(Kokkos_ENABLE_CUDA)
-  kokkos_check(OPTIONS CUDA_LAMBDA)
+if(NOT ARBORX_ENABLE_HEADERONLY)
+  set(ARBORX_ENABLE_KOKKOS ON)
+  find_package(Kokkos 3.1 REQUIRED)
+  if(Kokkos_ENABLE_CUDA)
+    kokkos_check(OPTIONS CUDA_LAMBDA)
+  endif()
 endif()
 
 add_library(ArborX INTERFACE)
-target_link_libraries(ArborX INTERFACE Kokkos::kokkos)
+if(ARBORX_ENABLE_KOKKOS)
+  target_link_libraries(ArborX INTERFACE Kokkos::kokkos)
+endif()
 set_target_properties(ArborX PROPERTIES INTERFACE_COMPILE_FEATURES cxx_std_14)
 # As all executables using ArborX depend on it, depending on record_hash allows
 # updating hash each time executable is rebuilt, including when called from
--- a/cmake/ArborXConfig.cmake.in
+++ b/cmake/ArborXConfig.cmake.in
@@ -4,11 +4,13 @@ set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR} ${CMAKE_MODULE_PATH})
 
 include(CMakeFindDependencyMacro)
 
-find_package(Kokkos QUIET)
-if(NOT Kokkos_FOUND)
-  # If Kokkos was not found, try to use Kokkos used when building ArborX
-  set(Kokkos_DIR @Kokkos_DIR@)
-  find_dependency(Kokkos)
+if(ARBORX_ENABLE_KOKKOS)
+  find_package(Kokkos QUIET)
+  if(NOT Kokkos_FOUND)
+    # If Kokkos was not found, try to use Kokkos used when building ArborX
+    set(Kokkos_DIR @Kokkos_DIR@)
+    find_dependency(Kokkos)
+  endif()
 endif()
 
 include("${CMAKE_CURRENT_LIST_DIR}/ArborXSettings.cmake")
